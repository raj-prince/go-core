apiVersion: v1
kind: PersistentVolume
metadata:
  name: training-bucket-pv
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 64Gi
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gcsfuse-sc # dummy storage class
  claimRef:
    namespace: <customer-namespace>
    name: training-bucket-pvc
  mountOptions:
  - implicit-dirs                       # Create implicit directories locally when accessed
  - metadata-cache:negative-ttl-secs:0  # Disable caching for lookups of files/dirs that don't exist
  - metadata-cache:ttl-secs:-1          # Keep cached metadata (file attributes, types) indefinitely time-wise
  - metadata-cache:stat-cache-max-size-mb:-1 # Allow unlimited size for the file attribute (stat) cache
  - metadata-cache:type-cache-max-size-mb:-1 # Allow unlimited size for the file/directory type cache
  # if enabling the file cache, uncomment out to use #
  # - file-cache:max-size-mb:-1           # Allow unlimited size for the file content cache
  # - file-cache:cache-file-for-range-read:true # Cache the entire file when any part is read sequentially
  # - read_ahead_kb=1024                  # Increase kernel read-ahead buffer
  csi:
    driver: gcsfuse.csi.storage.gke.io
    volumeHandle: <training-bucket>     # Name of the GCS Bucket to mount
    volumeAttributes:
      skipCSIBucketAccessCheck: "true"  # Bypass the CSI Drivers bucket access check
      gcsfuseMetadataPrefetchOnMount: "true" # Fetch GCS metadata immediately at mount time
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: training-bucket-pvc
  namespace: <customer-namespace>
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 64Gi
  volumeName: training-bucket-pv
  storageClassName: gcsfuse-sc # dummy storage class
